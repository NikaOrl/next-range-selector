(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(module,exports){},175:function(module,exports){function webpackEmptyAsyncContext(req){return Promise.resolve().then(function(){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e})}webpackEmptyAsyncContext.keys=function(){return[]},webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,module.exports=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id=175},178:function(module,exports){module.exports='## Project setup\r\n\r\n```\r\nnpm i next-range-selector\r\n```\r\n\r\n## Basic usage example with NgModel\r\n\r\n### Add module into your app\r\n\r\n```\r\nimport { NextRangeSelectorModule } from \'next-range-selector\';\r\nimport { FormsModule } from \'@angular/forms\';\r\n\r\n@NgModule({\r\n  bootstrap: [AppComponent],\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    ..., NextRangeSelectorModule, FormsModule\r\n  ],\r\n  providers: []\r\n})\r\nexport class AppModule {\r\n}\r\n\r\n```\r\n\r\n### Add code to the component file\r\n\r\n```\r\n@Component({\r\n  export class AppComponent {\r\n    ...\r\n    value = 10;\r\n  }\r\n  ...\r\n```\r\n\r\n### Add markup to the template file\r\n\r\n```\r\n<form>\r\n  <next-range-selector\r\n    [(ngModel)]="value"\r\n    name="range-selector1"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n  >\r\n  </next-range-selector>\r\n</form>\r\n<ng-template #dotTpl>\r\n  <div class="slider-dot">\r\n    <div class="slider-dot-handle"></div>\r\n  </div>\r\n</ng-template>\r\n<ng-template #markTpl let-mark="mark">{{ mark }}</ng-template>\r\n```\r\n\r\n## Basic usage example with Reactive Forms\r\n\r\n### Add module into your app\r\n\r\n```\r\nimport { NextRangeSelectorModule } from \'next-range-selector\';\r\nimport { ReactiveFormsModule } from \'@angular/forms\';\r\n\r\n@NgModule({\r\n  bootstrap: [AppComponent],\r\n  declarations: [AppComponent],\r\n  imports: [...,\r\n    NextRangeSelectorModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: []\r\n})\r\nexport class AppModule {\r\n}\r\n\r\n```\r\n\r\n### Add code to the component file\r\n\r\n```\r\nimport { FormControl, FormGroup } from \'@angular/forms\';\r\n\r\n@Component({\r\n  export class AppComponent {\r\n    ...\r\n    public appFormGroup = new FormGroup({\r\n      value: new FormControl(10),\r\n    });\r\n  }\r\n  ...\r\n```\r\n\r\n### Add markup to the template file\r\n\r\n```\r\n<form [formGroup]="appFormGroup">\r\n  <next-range-selector\r\n    [(ngModel)]="value"\r\n    name="range-selector1"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n    formControlName="value"\r\n  >\r\n  </next-range-selector>\r\n</form>\r\n<ng-template #dotTpl>\r\n  <div class="slider-dot">\r\n    <div class="slider-dot-handle"></div>\r\n  </div>\r\n</ng-template>\r\n<ng-template #markTpl let-mark="mark">{{ mark }}</ng-template>\r\n```\r\n\r\n## The RangeSelector has:\r\n\r\n### RangeSelector inputs:\r\n\r\n- id: string (In case of missing the id, it will be automatically generated);\r\n- min: number (default 0) - minimum of the range;\r\n- max: number (default 100) - maximum of the range;\r\n- useKeyboard: boolean (default true);\r\n- interval: number (default 1) - step between values;\r\n- process: boolean (if [borders]=true, then default false, if [borders]=false, then default true) - show process (area between dots);\r\n- duration: number (default 0.5) - css "transition-duration" - the animation duration of the dot and the process in seconds;\r\n- tabIndex: number (default 1);\r\n- width: number | string;\r\n- height: number | string;\r\n- dotSize: [number, number] | number (default 14);\r\n- direction: RangeSelectorDirection (enum - string) (default \'ltr\' - \'left to right\');\r\n- borders: Border[] - array of borders by dot index;\r\n- showBorders: boolean (default true);\r\n- disabled: boolean (default false) - disable for a whole selector;\r\n- marks: boolean | Marks | Value[] - if boolean: show marks (all possible values), if Marks: marks object, if Value: array of strings|numbers;\r\n- data: Value[] - array of strings|numbers - possible values;\r\n- lazy (default false) - if true: value will only be updated when the drag is over;\r\n- dotDisabled: boolean | boolean[];\r\n\r\nTemplates:\r\n\r\n- dotTpl - template variable for the ng-template of the dot;\r\n- markTpl - template variable for the ng-template of the mark;\r\n\r\nStyles:\r\n\r\n`interface Styles { [key: string]: any; }`\r\n\r\n- railStyle: Styles;\r\n- processStyle: Styles;\r\n- markStyle: Styles;\r\n- markStepStyle: Styles;\r\n- dotStyle: Styles;\r\n- borderStyle: Styles;\r\n- bordersColors: string[] (default [\'#9d9d9d\', \'#c6c6c6\']);\r\n\r\n### The template for this example looks like the code below\r\n\r\n```\r\n<style>\r\n  .slider-dot {\r\n    height: 14px;\r\n    left: 58%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 14px;\r\n    will-change: transform;\r\n    z-index: 5;\r\n  }\r\n  .slider-dot-handle {\r\n    -webkit-box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    -webkit-box-sizing: border-box;\r\n    background-color: #fff;\r\n    border-radius: 50%;\r\n    box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .container {\r\n    font-size: 16px;\r\n    font-family: sans-serif;\r\n    margin: 50px;\r\n  }\r\n</style>\r\n<form class="container">\r\n  <b>Form title</b>\r\n  <p>min: 0, max: 100, value: <input type="text" name="input" size="5" [(ngModel)]="value"/></p>\r\n  <p>next-range-selector default look:</p>\r\n  <next-range-selector\r\n    [(ngModel)]="value"\r\n    name="range-selector1"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n  >\r\n  </next-range-selector>\r\n</form>\r\n<ng-template #dotTpl>\r\n  <div class="slider-dot">\r\n    <div class="slider-dot-handle"></div>\r\n  </div>\r\n</ng-template>\r\n<ng-template #markTpl let-mark="mark">{{ mark }}</ng-template>\r\n```\r\n'},179:function(module,exports){module.exports='## The range-selector with different directions\r\n\r\nYou can set different [direction] to the range-selector.\r\nThere are four options in the special enum RangeSelectorDirection:\r\n\r\n- \'ltr\' (by default) - \'left to right\';\r\n- \'rtl\' - \'right to left\';\r\n- \'ttb\' - \'top to bottom\';\r\n- \'btt\' - \'bottom to top\'.\r\n\r\nWhen the value is ltr or rtl, it is horizontal, and when it is ttb or bbt, it is vertical.\r\n\r\n## To use this enum import it into the component:\r\n\r\n```\r\nimport {RangeSelectorDirection} from \'next-range-selector\';\r\n\r\nexport class AppComponent {\r\n...\r\n  public get RangeSelectorDirection() {\r\n    return RangeSelectorDirection;\r\n  }\r\n}\r\n```\r\n\r\n### The template for this example looks like the code below\r\n\r\n```\r\n<style>\r\n  .slider-dot {\r\n    height: 14px;\r\n    left: 58%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 14px;\r\n    will-change: transform;\r\n    z-index: 5;\r\n  }\r\n  .slider-dot-handle {\r\n    -webkit-box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    -webkit-box-sizing: border-box;\r\n    background-color: #fff;\r\n    border-radius: 50%;\r\n    box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .container {\r\n    font-size: 16px;\r\n    font-family: sans-serif;\r\n    margin: 50px;\r\n  }\r\n</style>\r\n<form class="container">\r\n  <next-range-selector\r\n    [(ngModel)]="value"\r\n    name="range-selector1"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n    [direction]="RangeSelectorDirection.ltr"\r\n  >\r\n  </next-range-selector>\r\n  <next-range-selector\r\n    [(ngModel)]="value"\r\n    name="range-selector2"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n    [direction]="RangeSelectorDirection.rtl"\r\n  >\r\n  </next-range-selector>\r\n  ...\r\n</form>\r\n<ng-template #dotTpl>\r\n  <div class="slider-dot">\r\n    <div class="slider-dot-handle"></div>\r\n  </div>\r\n</ng-template>\r\n<ng-template #markTpl let-mark="mark">{{ mark }} </ng-template>\r\n```\r\n'},180:function(module,exports){module.exports='## The range-selector with different marks and data\r\n\r\nIf [marks] are "true", all possible values (digits or letters) will be shown as captions. But they might overlap each other, so you can set [marks] as object or as array of Value: strings|numbers;\r\nAlso you can set data by Value[], array of strings or numbers.\r\n\r\n### The template for this example looks like the code below\r\n\r\n```\r\n<style>\r\n  .slider-dot {\r\n    height: 14px;\r\n    left: 58%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 14px;\r\n    will-change: transform;\r\n    z-index: 5;\r\n  }\r\n  .slider-dot-handle {\r\n    -webkit-box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    -webkit-box-sizing: border-box;\r\n    background-color: #fff;\r\n    border-radius: 50%;\r\n    box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .container {\r\n    font-size: 16px;\r\n    font-family: sans-serif;\r\n    margin: 50px;\r\n  }\r\n</style>\r\n<form class="container">\r\n  <next-range-selector\r\n    [(ngModel)]="value"\r\n    name="range-selector1"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n    [interval]="10"\r\n    [marks]="true"\r\n  >\r\n  </next-range-selector>\r\n  <next-range-selector\r\n    [(ngModel)]="value2"\r\n    [data]="data"\r\n    [marks]="true"\r\n    name="range-selector2"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n    style="display: inline-block; margin-top: 30px; width: 100%;"\r\n  >\r\n  </next-range-selector>\r\n  <next-range-selector\r\n    [(ngModel)]="value5"\r\n    name="range-selector5"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n    style="display: inline-block; margin-top: 30px; width: 100%;"\r\n    [marks]="marks"\r\n    [interval]="10"\r\n  >\r\n  </next-range-selector>\r\n  ...\r\n</form>\r\n<ng-template #dotTpl>\r\n  <div class="slider-dot">\r\n    <div class="slider-dot-handle"></div>\r\n  </div>\r\n</ng-template>\r\n<ng-template #markTpl let-mark="mark">{{ mark }}</ng-template>\r\n```\r\n\r\n### And the props looks like the code below\r\n\r\n```\r\nprops: {\r\n  value: 10,\r\n  data: [\'a\', \'b\', \'c\', \'d\', \'e\', \'f\', \'g\'],\r\n  value2: \'b\',\r\n  value3: 40,\r\n  value4: \'c\',\r\n  marks: [0, 10, 40, 50, 100],\r\n  value5: 10,\r\n}\r\n```\r\n'},181:function(module,exports){module.exports='## The range-selector with process shown or not and different borders\r\n\r\nYou can set [process]:boolean to show it if true or hide away.\r\nAlso you can set [borders] - array of borders for dots by dot index. You can add bordersColors: string[] (default [\'#9d9d9d\', \'#c6c6c6\'])\r\n\r\n### The template for this example looks like the code below\r\n\r\n```\r\n<style>\r\n  .slider-dot {\r\n    height: 14px;\r\n    left: 58%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 14px;\r\n    will-change: transform;\r\n    z-index: 5;\r\n  }\r\n  .slider-dot-handle {\r\n    -webkit-box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    -webkit-box-sizing: border-box;\r\n    background-color: #fff;\r\n    border-radius: 50%;\r\n    box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .container {\r\n    font-size: 16px;\r\n    font-family: sans-serif;\r\n    margin: 50px;\r\n  }\r\n</style>\r\n<form class="container">\r\n  ...\r\n  <next-range-selector\r\n    [(ngModel)]="value1"\r\n    name="range-selector1"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n    [borders]="borders"\r\n    [interval]="10"\r\n    [marks]="true"\r\n    style="display: inline-block; margin-top: 30px; width: 100%;"\r\n  >\r\n  </next-range-selector>\r\n  <next-range-selector\r\n    [(ngModel)]="value2"\r\n    name="range-selector2"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n    [borders]="borders"\r\n    [interval]="10"\r\n    [process]="true"\r\n    [marks]="true"\r\n    style="display: inline-block; margin-top: 30px; width: 100%;"\r\n  >\r\n  </next-range-selector>\r\n  ...\r\n  <next-range-selector\r\n    [(ngModel)]="value5"\r\n    name="range-selector5"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n    [borders]="borders2"\r\n    [interval]="10"\r\n    [marks]="true"\r\n    [bordersColors]="bordersColors"\r\n    style="display: inline-block; margin-top: 30px; width: 100%;"\r\n  >\r\n  </next-range-selector>\r\n</form>\r\n<ng-template #dotTpl>\r\n  <div class="slider-dot">\r\n    <div class="slider-dot-handle"></div>\r\n  </div>\r\n</ng-template>\r\n<ng-template #markTpl let-mark="mark">{{ mark }}</ng-template>\r\n```\r\n\r\n### And the props looks like the code below\r\n\r\n```\r\nprops: {\r\n  value: [10, 40, 30],\r\n  value1: [10, 40, 30],\r\n  value2: [10, 40, 30],\r\n  value3: [10, 40, 30],\r\n  value4: [10, 40, 30],\r\n  value5: [10, 40, 70],\r\n  borders: [{max: 30, min: 5}, {max: 60, min: 30}],\r\n  borders2: [{max: 30, min: 5}, {max: 60, min: 30}, {max: 80, min: 60}],\r\n  bordersColors: [\'red\', \'green\', \'blue\'],\r\n}\r\n```\r\n'},182:function(module,exports){module.exports='## The range-selector with different directions\r\n\r\nYou can make all range-selector [disable] - then all its dots will be disabled. Or you can set disable for some dots by using [dotDisabled] array ([false, true] for example).\r\n\r\n### The template for this example looks like the code below\r\n\r\n```\r\n<style>\r\n  .slider-dot {\r\n    height: 14px;\r\n    left: 58%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 14px;\r\n    will-change: transform;\r\n    z-index: 5;\r\n  }\r\n  .slider-dot-handle {\r\n    -webkit-box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    -webkit-box-sizing: border-box;\r\n    background-color: #fff;\r\n    border-radius: 50%;\r\n    box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .container {\r\n    font-size: 16px;\r\n    font-family: sans-serif;\r\n    margin: 50px;\r\n  }\r\n</style>\r\n<form class="container">\r\n  ...\r\n  <next-range-selector\r\n    [(ngModel)]="value2"\r\n    name="range-selector2"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n    [disabled]="true"\r\n    style="display: inline-block; margin-top: 30px; width: 100%;"\r\n  >\r\n  </next-range-selector>\r\n  <next-range-selector\r\n    [(ngModel)]="value3"\r\n    name="range-selector3"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n    [dotDisabled]="dotDisabled"\r\n    style="display: inline-block; margin-top: 30px; width: 100%;"\r\n  >\r\n  </next-range-selector>\r\n</form>\r\n<ng-template #dotTpl let-disabled="disabled">\r\n  <div class="slider-dot">\r\n    <div class="slider-dot-handle" [ngStyle]="disabled ? {\'background-color\': \'lightgrey\'}: {}"></div>\r\n  </div>\r\n</ng-template>\r\n<ng-template #markTpl let-mark="mark">{{ mark }}</ng-template>\r\n```\r\n\r\n### And the props looks like the code below\r\n\r\n```\r\nprops: {\r\n  value1: [15, 30],\r\n  value2: [15, 30],\r\n  value3: [15, 30],\r\n  dotDisabled: [false, true],\r\n}\r\n```\r\n'},183:function(module,exports){module.exports='## The range-selector with different directions\r\n\r\nYou can set [duration] of the dot and process change animation to the range-selector - it\'s a number in seconds (default 0.5)\r\nAlso you can set different tabIndexes to the checkboxes\r\n\r\n#### _Try to push Tab for the range-selectors_\r\n\r\n### The template for this example looks like the code below\r\n\r\n```\r\n<style>\r\n  .slider-dot {\r\n    height: 14px;\r\n    left: 58%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 14px;\r\n    will-change: transform;\r\n    z-index: 5;\r\n  }\r\n  .slider-dot-handle {\r\n    -webkit-box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    -webkit-box-sizing: border-box;\r\n    background-color: #fff;\r\n    border-radius: 50%;\r\n    box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .container {\r\n    font-size: 16px;\r\n    font-family: sans-serif;\r\n    margin: 50px;\r\n  }\r\n</style>\r\n<form class="container">\r\n  duration 0.5(default), tabIndex 1:\r\n  <next-range-selector\r\n    [(ngModel)]="value1"\r\n    name="range-selector1"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n\r\n    [interval]="10"\r\n    [marks]="true"\r\n    style="display: inline-block; margin: 30px 0; width: 100%;"\r\n  >\r\n  </next-range-selector>\r\n  duration 0, tabIndex 3 (default):\r\n  <next-range-selector\r\n    [(ngModel)]="value2"\r\n    name="range-selector2"\r\n    [dotTpl]="dotTpl"\r\n    [tabIndex]="3"\r\n    [markTpl]="markTpl"\r\n    [duration]="0"\r\n    [interval]="10"\r\n    [marks]="true"\r\n    style="display: inline-block; margin: 30px 0; width: 100%;"\r\n  >\r\n  </next-range-selector>\r\n  ...\r\n</form>\r\n<ng-template #dotTpl>\r\n  <div class="slider-dot">\r\n    <div class="slider-dot-handle"></div>\r\n  </div>\r\n</ng-template>\r\n<ng-template #markTpl let-mark="mark">{{ mark }}</ng-template>\r\n```\r\n'},184:function(module,exports){module.exports='## The range-selector with different directions\r\n\r\nYou can set any styles you want for the range-selector. There are following inputs:\r\n\r\n`interface Styles { [key: string]: any; }`\r\n\r\n- railStyle: Styles;\r\n- processStyle: Styles;\r\n- markStyle: Styles;\r\n- markStepStyle: Styles;\r\n- dotStyle: Styles;\r\n- borderStyle: Styles;\r\n- bordersColors: string[] (default [\'#9d9d9d\', \'#c6c6c6\'])\r\n\r\nYou can use transclusion for dots and marks by setting ng-templates in [dotTpl] and [markTpl]. The component returns pos, index, disabled it or not (boolean disabled) and on focus it or not (boolean focus) for every dot. The component returns value (number or string) and label(mark) (number or string, if [marks] is not an object then mark = value) for every mark. So you can add some styles for every state and show whatever and however you want it.\r\n\r\n### The template for this example looks like the code below\r\n\r\n```\r\n<style>\r\n  .slider-dot {\r\n    height: 14px;\r\n    left: 58%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 14px;\r\n    will-change: transform;\r\n    z-index: 5;\r\n  }\r\n  .slider-dot-handle {\r\n    -webkit-box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    -webkit-box-sizing: border-box;\r\n    background-color: #fff;\r\n    border-radius: 50%;\r\n    box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .container {\r\n    font-size: 16px;\r\n    font-family: sans-serif;\r\n    margin: 50px;\r\n  }\r\n  .slider-dot-rocket {\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n<form class="container">\r\n  <next-range-selector\r\n    [(ngModel)]="value"\r\n    name="range-selector1"\r\n    [dotTpl]="dotTpl"\r\n    [markTpl]="markTpl"\r\n    [railStyle]="railStyle"\r\n    [processStyle]="processStyle"\r\n    [markStepStyle]="markStepStyle"\r\n    [marks]="true"\r\n    [interval]="10"\r\n    [dotStyle]="dotStyle"\r\n    [markStyle]="markStyle"\r\n  >\r\n  </next-range-selector>\r\n</form>\r\n<ng-template #dotTpl let-focus="focus">\r\n  <div class="slider-dot">\r\n    <div class="slider-dot-rocket" [ngStyle]="focus ? {\'outline\': \'red auto 5px\'}: {}">\r\n      🚀\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n<ng-template #markTpl let-mark="mark">{{ mark }}</ng-template>\r\n```\r\n\r\n### And the props looks like the code below\r\n\r\n```\r\nprops: {\r\n  value: 10,\r\n  railStyle: {\'background-color\': \'pink\'},\r\n  processStyle: {\'background-color\': \'green\'},\r\n  markStepStyle: {\'background-color\': \'red\'},\r\n  dotStyle: {outline: \'none\'},\r\n  markStyle: {\'font-family\': \'Consolas\', color: \'darkred\'},\r\n}\r\n```\r\n'},188:function(module,exports,__webpack_require__){__webpack_require__(189),__webpack_require__(267),__webpack_require__(268),module.exports=__webpack_require__(365)},268:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(50),_storybook_addon_options__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(177);__webpack_require__(361);Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.addDecorator)(Object(_storybook_addon_options__WEBPACK_IMPORTED_MODULE_1__.withOptions)({name:"Storybook",url:"#",goFullScreen:!1,showStoriesPanel:!0,showAddonPanel:!0,showSearchBox:!1,addonPanelInRight:!0,sortStoriesByKind:!1,hierarchySeparator:null,hierarchyRootSeparator:null,sidebarAnimations:!0,selectedAddonPanel:void 0,enableShortcuts:!1})),Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.configure)(function loadStories(){__webpack_require__(362)},module)}.call(this,__webpack_require__(147)(module))},361:function(module,exports){module.exports="body {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n"},362:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(50),_projects_next_range_selector_src_public_api__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(95),_default_md__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(178),_default_md__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_default_md__WEBPACK_IMPORTED_MODULE_2__),_with_different_directions_md__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(179),_with_different_directions_md__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_with_different_directions_md__WEBPACK_IMPORTED_MODULE_3__),_with_different_marks_and_data_md__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(180),_with_different_marks_and_data_md__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_with_different_marks_and_data_md__WEBPACK_IMPORTED_MODULE_4__),_with_different_process_and_borders_md__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(181),_with_different_process_and_borders_md__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_with_different_process_and_borders_md__WEBPACK_IMPORTED_MODULE_5__),_with_disable_md__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(182),_with_disable_md__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(_with_disable_md__WEBPACK_IMPORTED_MODULE_6__),_with_different_duration_and_tabIndexes_md__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(183),_with_different_duration_and_tabIndexes_md__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(_with_different_duration_and_tabIndexes_md__WEBPACK_IMPORTED_MODULE_7__),_with_different_styles_md__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(184),_with_different_styles_md__WEBPACK_IMPORTED_MODULE_8___default=__webpack_require__.n(_with_different_styles_md__WEBPACK_IMPORTED_MODULE_8__),styles="\n  <style>\n    .slider-dot {\n      height: 14px;\n      left: 58%;\n      position: absolute;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      width: 14px;\n      will-change: transform;\n      z-index: 5;\n    }\n    .slider-dot-handle {\n      -webkit-box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\n      -webkit-box-sizing: border-box;\n      background-color: #fff;\n      border-radius: 50%;\n      box-shadow: 0.5px 0.5px 2px 1px rgba(0, 0, 0, 0.32);\n      box-sizing: border-box;\n      cursor: pointer;\n      height: 100%;\n      width: 100%;\n    }\n    .container {\n      font-size: 16px;\n      font-family: sans-serif;\n      margin: 20px;\n    }\n  </style>\n";Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.storiesOf)("next-range-selector",module).addDecorator(Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({declarations:[_projects_next_range_selector_src_public_api__WEBPACK_IMPORTED_MODULE_1__.a]})).add("Install",function(){return{template:"\n      "+styles+'\n      <form class="container">\n        <b>Form title</b>\n        <p>min: 0, max: 100, value: <input type="text" name="input" size="5" [(ngModel)]="value"/></p>\n        <p>next-range-selector default view:</p>\n        <next-range-selector\n          [(ngModel)]="value"\n          name="range-selector1"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n        >\n        </next-range-selector>\n      </form>\n      <ng-template #dotTpl>\n        <div class="slider-dot">\n          <div class="slider-dot-handle"></div>\n        </div>\n      </ng-template>\n      <ng-template #markTpl let-mark="mark">{{ mark }}</ng-template>\n    ',props:{value:10}}},{notes:_default_md__WEBPACK_IMPORTED_MODULE_2___default.a}).add("Diff directions",function(){return{template:"\n      "+styles+'\n      <form class="container">\n        <b>Direction</b>\n        <p>min: 0, max: 100, value: <input type="text" name="input" size="5" [(ngModel)]="value"/></p>\n        <p>RangeSelectorDirection.ltr - left to right:</p>\n        <next-range-selector\n          [(ngModel)]="value"\n          name="range-selector1"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [direction]="RangeSelectorDirection.ltr"\n        >\n        </next-range-selector>\n        <p>RangeSelectorDirection.rtl - right to left:</p>\n        <next-range-selector\n          [(ngModel)]="value"\n          name="range-selector2"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [direction]="RangeSelectorDirection.rtl"\n        >\n        </next-range-selector>\n        <div style="display: flex; margin-top: 30px;">\n          <div>\n            <p>RangeSelectorDirection.ttb - top to bottom:</p>\n            <next-range-selector\n              [(ngModel)]="value"\n              name="range-selector3"\n              [dotTpl]="dotTpl"\n              [markTpl]="markTpl"\n              [direction]="RangeSelectorDirection.ttb"\n              style="display: block; margin: 30px; height: 300px;"\n            >\n            </next-range-selector>\n          </div>\n          <div style="margin-left: 10%;">\n            <p>RangeSelectorDirection.btt - bottom to top:</p>\n            <next-range-selector\n              [(ngModel)]="value"\n              name="range-selector4"\n              [dotTpl]="dotTpl"\n              [markTpl]="markTpl"\n              [direction]="RangeSelectorDirection.btt"\n              style="display: block; margin: 30px; height: 300px;"\n            >\n            </next-range-selector>\n          </div>\n        </div>\n      </form>\n      <ng-template #dotTpl>\n        <div class="slider-dot">\n          <div class="slider-dot-handle"></div>\n        </div>\n      </ng-template>\n      <ng-template #markTpl let-mark="mark">{{ mark }} </ng-template>\n    ',props:{value:10,RangeSelectorDirection:_projects_next_range_selector_src_public_api__WEBPACK_IMPORTED_MODULE_1__.b}}},{notes:_with_different_directions_md__WEBPACK_IMPORTED_MODULE_3___default.a}).add("Diff marks and data",function(){return{template:"\n      "+styles+'\n      <form class="container">\n        <b>Marks and data</b>\n        <p>marks = true, interval = 10, value = 10:</p>\n        <next-range-selector\n          [(ngModel)]="value"\n          name="range-selector1"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [interval]="10"\n          [marks]="true"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n        <p>marks = true, data = [\'a\', \'b\', \'c\', \'d\', \'e\', \'f\', \'g\'], value = \'b\':</p>\n        <next-range-selector\n          [(ngModel)]="value2"\n          [data]="data"\n          [marks]="true"\n          name="range-selector2"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n        <p>marks = [0, 10, 40, 50, 100], interval = 10, value = 10:</p>\n        <next-range-selector\n          [(ngModel)]="value5"\n          name="range-selector5"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n          [marks]="marks"\n          [interval]="10"\n        >\n        </next-range-selector>\n        <p>marks = {{ \'{\' }}30: \'😀\', 60: \'😎\', 80: \'👍\', 100: \'💯\'{{ \'}\' }}, interval = 10, value = 10:</p>\n        <next-range-selector\n          [(ngModel)]="value6"\n          name="range-selector6"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n          [marks]="marks2"\n          [interval]="10"\n        >\n        </next-range-selector>\n        <div style="display: flex; margin-top: 30px;">\n          <div>\n            <p>marks = true, interval=20, value = 40, direction=\'btt\':</p>\n            <next-range-selector\n              [(ngModel)]="value3"\n              name="range-selector3"\n              [dotTpl]="dotTpl"\n              [markTpl]="markTpl"\n              [direction]="RangeSelectorDirection.btt"\n              [interval]="20"\n              [marks]="true"\n              style="display: inline-block; margin: 30px; height: 300px;"\n            >\n            </next-range-selector>\n          </div>\n          <div style="margin-left: 10%;">\n            <p>marks = true, data = [\'a\', \'b\', \'c\', \'d\', \'e\', \'f\', \'g\'], value = \'c\', direction=\'ttb\':</p>\n            <next-range-selector\n              [(ngModel)]="value4"\n              name="range-selector4"\n              [dotTpl]="dotTpl"\n              [markTpl]="markTpl"\n              [direction]="RangeSelectorDirection.ttb"\n              [data]="data"\n              [marks]="true"\n              style="display: inline-block; margin: 30px; height: 300px;"\n            >\n            </next-range-selector>\n          </div>\n        </div>\n      </form>\n      <ng-template #dotTpl>\n        <div class="slider-dot">\n          <div class="slider-dot-handle"></div>\n        </div>\n      </ng-template>\n      <ng-template #markTpl let-mark="mark">{{ mark }}</ng-template>\n    ',props:{value:10,data:["a","b","c","d","e","f","g"],value2:"b",value3:40,value4:"c",marks:[0,10,40,50,100],value5:10,value6:30,marks2:{30:"😀",60:"😎",80:"👍",100:"💯"},RangeSelectorDirection:_projects_next_range_selector_src_public_api__WEBPACK_IMPORTED_MODULE_1__.b}}},{notes:_with_different_marks_and_data_md__WEBPACK_IMPORTED_MODULE_4___default.a}).add("Diff process and borders",function(){return{template:"\n      "+styles+'\n      <form class="container">\n        <b>Process and borders</b>\n        <p>default view:</p>\n        <next-range-selector\n          [(ngModel)]="value"\n          name="range-selector0"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n        >\n        </next-range-selector>\n        <p>borders = [{{ \'{\' }}max: 30, min: 5{{ \'}\' }}, {{ \'{\' }}max: 60, min: 30{{ \'}\' }}]:</p>\n        <next-range-selector\n          [(ngModel)]="value1"\n          name="range-selector1"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [borders]="borders"\n          [interval]="10"\n          [marks]="true"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n        <p>borders = [{{ \'{\' }}max: 30, min: 5{{ \'}\' }}, {{ \'{\' }}max: 60, min: 30{{ \'}\' }}], process = true:</p>\n        <next-range-selector\n          [(ngModel)]="value2"\n          name="range-selector2"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [borders]="borders"\n          [interval]="10"\n          [process]="true"\n          [marks]="true"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n        <p>\n          borders = [{{ \'{\' }}max: 30, min: 5{{ \'}\' }}, {{ \'{\' }}max: 60, min: 30{{ \'}\' }}], process = true,\n          showBorders = false:\n        </p>\n        <next-range-selector\n          [(ngModel)]="value3"\n          name="range-selector3"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [borders]="borders"\n          [interval]="10"\n          [showBorders]="false"\n          [marks]="true"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n        <p>\n          borders = [{{ \'{\' }}max: 30, min: 5{{ \'}\' }}, {{ \'{\' }}max: 60, min: 30{{ \'}\' }}], process = false,\n          showBorders = false:\n        </p>\n        <next-range-selector\n          [(ngModel)]="value4"\n          name="range-selector4"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [borders]="borders"\n          [showBorders]="false"\n          [process]="false"\n          [interval]="10"\n          [marks]="true"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n        <p>\n          borders = [{{ \'{\' }}max: 30, min: 5{{ \'}\' }},\n          {{ \'{\' }}max: 60, min: 30{{ \'}\' }},\n          {{ \'{\' }}max: 80, min: 60{{ \'}\' }}], process = false,\n          bordersColors = [\'red\', \'green\', \'blue\']:\n        </p>\n        <next-range-selector\n          [(ngModel)]="value5"\n          name="range-selector5"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [borders]="borders2"\n          [interval]="10"\n          [marks]="true"\n          [bordersColors]="bordersColors"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n      </form>\n      <ng-template #dotTpl>\n        <div class="slider-dot">\n          <div class="slider-dot-handle"></div>\n        </div>\n      </ng-template>\n      <ng-template #markTpl let-mark="mark">{{ mark }}</ng-template>\n    ',props:{value:[10,40,30],value1:[10,40,30],value2:[10,40,30],value3:[10,40,30],value4:[10,40,30],value5:[10,40,70],borders:[{max:30,min:5},{max:60,min:30}],borders2:[{max:30,min:5},{max:60,min:30},{max:80,min:60}],bordersColors:["red","green","blue"]}}},{notes:_with_different_process_and_borders_md__WEBPACK_IMPORTED_MODULE_5___default.a}).add("Disable",function(){return{template:"\n      "+styles+'\n      <form class="container">\n        <b>Disable</b>\n        <p>default view:</p>\n        <next-range-selector\n          [(ngModel)]="value1"\n          name="range-selector1"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n        <p>disabled = true:</p>\n        <next-range-selector\n          [(ngModel)]="value2"\n          name="range-selector2"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [disabled]="true"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n        <p>dotDisabled = [false, true]:</p>\n        <next-range-selector\n          [(ngModel)]="value3"\n          name="range-selector3"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [dotDisabled]="dotDisabled"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n      </form>\n      <ng-template #dotTpl let-disabled="disabled">\n        <div class="slider-dot">\n          <div class="slider-dot-handle"  [ngStyle]="disabled ? {\'background-color\': \'lightgrey\'}: {}"></div>\n        </div>\n      </ng-template>\n      <ng-template #markTpl let-mark="mark">{{ mark }} </ng-template>\n    ',props:{value1:[15,30],value2:[15,30],value3:[15,30],dotDisabled:[!1,!0]}}},{notes:_with_disable_md__WEBPACK_IMPORTED_MODULE_6___default.a}).add("Duration and tabIndex",function(){return{template:"\n      "+styles+'\n      <form class="container">\n        <b>Duration and tabIndex</b>\n        <p><i>tabIndex: Try to push Tab for the range-selectors</i></p>\n        <p><i>duration: Try to use keyboard and clicking on the non-dot range-selector area</i></p>\n        <p>duration = 0.5 (default), tabIndex = 1 (default):</p>\n        <next-range-selector\n          [(ngModel)]="value1"\n          name="range-selector1"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [interval]="10"\n          [marks]="true"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n        <p>duration = 0, tabIndex = 3:</p>\n        <next-range-selector\n          [(ngModel)]="value2"\n          name="range-selector2"\n          [dotTpl]="dotTpl"\n          [tabIndex]="3"\n          [markTpl]="markTpl"\n          [duration]="0"\n          [interval]="10"\n          [marks]="true"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n        <p>duration = 1, tabIndex = 4:</p>\n        <next-range-selector\n          [(ngModel)]="value3"\n          name="range-selector3"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [tabIndex]="4"\n          [duration]="1"\n          [interval]="10"\n          [marks]="true"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n        <p>duration = 2, tabIndex = 2:</p>\n        <next-range-selector\n          [(ngModel)]="value4"\n          name="range-selector4"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [tabIndex]="2"\n          [duration]="2"\n          [interval]="10"\n          [marks]="true"\n          style="display: inline-block; margin-bottom: 30px; width: 100%;"\n        >\n        </next-range-selector>\n      </form>\n      <ng-template #dotTpl>\n        <div class="slider-dot">\n          <div class="slider-dot-handle"></div>\n        </div>\n      </ng-template>\n      <ng-template #markTpl let-mark="mark">{{ mark }} </ng-template>\n    ',props:{value1:[10,50],value2:[10,50],value3:[10,50],value4:[10,50]}}},{notes:_with_different_duration_and_tabIndexes_md__WEBPACK_IMPORTED_MODULE_7___default.a}).add("Diff styles",function(){return{template:"\n      <style>\n        .slider-dot-rocket {\n          cursor: pointer;\n        }\n      </style>\n      "+styles+'\n      <form class="container">\n        <b>Custom styles</b>\n        <p>To see which styles were used for this example please read the Notes</p>\n        <next-range-selector\n          [(ngModel)]="value"\n          name="range-selector1"\n          [dotTpl]="dotTpl"\n          [markTpl]="markTpl"\n          [railStyle]="railStyle"\n          [processStyle]="processStyle"\n          [markStepStyle]="markStepStyle"\n          [marks]="true"\n          [interval]="10"\n          [dotStyle]="dotStyle"\n          [markStyle]="markStyle"\n        >\n        </next-range-selector>\n      </form>\n      <ng-template #dotTpl let-focus="focus">\n        <div class="slider-dot">\n          <div class="slider-dot-rocket" [ngStyle]="focus ? {\'outline\': \'red auto 5px\'}: {}">\n            🚀\n          </div>\n        </div>\n      </ng-template>\n      <ng-template #markTpl let-mark="mark">{{ mark }}</ng-template>\n    ',props:{value:10,railStyle:{"background-color":"pink"},processStyle:{"background-color":"green"},markStepStyle:{"background-color":"red"},dotStyle:{outline:"none"},markStyle:{"font-family":"Consolas",color:"darkred"}}}},{notes:_with_different_styles_md__WEBPACK_IMPORTED_MODULE_8___default.a})}.call(this,__webpack_require__(147)(module))},363:function(module,exports){module.exports='<div\r\n  aria-hidden="true"\r\n  [id]="id"\r\n  (click)="clickHandle($event)"\r\n  [ngStyle]="containerStyles"\r\n  [ngClass]="containerClasses"\r\n  #container\r\n>\r\n  <div class="slider-rail" [ngStyle]="railStyles">\r\n    <div\r\n      class="slider-process"\r\n      *ngFor="let item of bordersArray; let i = index; trackBy: trackByFn"\r\n      [ngStyle]="item.style"\r\n    ></div>\r\n    <div\r\n      class="slider-process"\r\n      *ngFor="let item of processArray; let i = index; trackBy: trackByFn"\r\n      [ngStyle]="item.style"\r\n      (mousedown)="clickHandle($event)"\r\n    ></div>\r\n    <div class="slider-marks">\r\n      <div class="slider-mark" *ngFor="let mark of markList; let i = index; trackBy: trackByFn" [ngStyle]="mark.style">\r\n        <div class="slider-mark-step" [ngStyle]="markStepStyles"></div>\r\n        <div class="slider-mark-label"><ng-container *ngTemplateOutlet="markTpl; context: mark"></ng-container></div>\r\n      </div>\r\n    </div>\r\n    <div\r\n      [ngStyle]="dot.style"\r\n      *ngFor="let dot of dots; let i = index; trackBy: trackByFn"\r\n      class="slider-dot"\r\n      [id]="getDotId(id, i)"\r\n      [tabIndex]="tabIndex"\r\n      (mousedown)="onPointerDown(i)"\r\n      (keydown.arrowup)="keydownHandle($event)"\r\n      (keydown.arrowleft)="keydownHandle($event)"\r\n      (keydown.arrowright)="keydownHandle($event)"\r\n      (keydown.arrowdown)="keydownHandle($event)"\r\n      (keydown.tab)="tabHandle()"\r\n    >\r\n      <ng-container *ngTemplateOutlet="dotTpl; context: dot"></ng-container>\r\n    </div>\r\n  </div>\r\n  <div *ngIf="this.dots.length === 1 && !this.data">\r\n    <input [tabIndex]="-1" class="slider-sr-only" type="range" value="{{ value }}" min="{{ min }}" max="{{ max }}" />\r\n  </div>\r\n</div>\r\n'},364:function(module,exports){module.exports=".slider {\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  box-sizing: content-box;\n  display: block;\n  position: relative; }\n\n.slider-rail {\n  height: 100%;\n  position: relative;\n  transition-property: width, height, left, right, top, bottom;\n  width: 100%; }\n\n.slider-process {\n  background-color: #5291dd;\n  position: absolute;\n  z-index: 1; }\n\n.slider-sr-only {\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  overflow: hidden;\n  position: absolute !important;\n  width: 1px; }\n\n.slider-dot {\n  position: absolute;\n  z-index: 5; }\n\n.slider-marks {\n  height: 100%;\n  position: relative;\n  width: 100%; }\n\n.slider-mark {\n  position: absolute;\n  z-index: 1; }\n\n.slider-ltr .slider-mark,\n  .slider-rtl .slider-mark {\n    height: 100%;\n    top: 50%;\n    width: 0; }\n\n.slider-ltr .slider-mark-step,\n    .slider-rtl .slider-mark-step {\n      top: 0; }\n\n.slider-ltr .slider-mark-label,\n    .slider-rtl .slider-mark-label {\n      margin-top: 10px;\n      top: 100%; }\n\n.slider-ltr .slider-mark {\n    -webkit-transform: translate(-50%, -50%);\n            transform: translate(-50%, -50%); }\n\n.slider-ltr .slider-mark-step {\n      left: 0; }\n\n.slider-ltr .slider-mark-label {\n      left: 50%;\n      -webkit-transform: translateX(-50%);\n              transform: translateX(-50%); }\n\n.slider-rtl .slider-mark {\n    -webkit-transform: translate(50%, -50%);\n            transform: translate(50%, -50%); }\n\n.slider-rtl .slider-mark-step {\n      right: 0; }\n\n.slider-rtl .slider-mark-label {\n      right: 50%;\n      -webkit-transform: translateX(50%);\n              transform: translateX(50%); }\n\n.slider-ttb .slider-mark,\n  .slider-btt .slider-mark {\n    height: 0;\n    left: 50%;\n    width: 100%; }\n\n.slider-ttb .slider-mark-step,\n    .slider-btt .slider-mark-step {\n      left: 0; }\n\n.slider-ttb .slider-mark-label,\n    .slider-btt .slider-mark-label {\n      left: 100%;\n      margin-left: 10px; }\n\n.slider-btt .slider-mark {\n    -webkit-transform: translate(-50%, 50%);\n            transform: translate(-50%, 50%); }\n\n.slider-btt .slider-mark-step {\n      top: 0; }\n\n.slider-btt .slider-mark-label {\n      top: 50%;\n      -webkit-transform: translateY(-50%);\n              transform: translateY(-50%); }\n\n.slider-ttb .slider-mark {\n    -webkit-transform: translate(-50%, -50%);\n            transform: translate(-50%, -50%); }\n\n.slider-ttb .slider-mark-step {\n      bottom: 0; }\n\n.slider-ttb .slider-mark-label {\n      bottom: 50%;\n      -webkit-transform: translateY(50%);\n              transform: translateY(50%); }\n\n.slider-mark-step, .slider-mark-label {\n    position: absolute; }\n\n.slider-mark-step {\n  border-radius: 50%;\n  height: 100%;\n  width: 100%; }\n"},365:function(module,exports,__webpack_require__){var content=__webpack_require__(366);"string"==typeof content&&(content=[[module.i,content,""]]);var options={hmr:!0,transform:void 0,insertInto:void 0};__webpack_require__(367)(content,options);content.locals&&(module.exports=content.locals)},366:function(module,exports){module.exports=[[module.i,"body {\n  margin: 12px;\n  padding: 0; }\n","",""]]},95:function(module,__webpack_exports__,__webpack_require__){"use strict";var KEY,RangeSelectorDirection,tslib_es6=__webpack_require__(0),core=__webpack_require__(1),typings=__webpack_require__(14),fesm5_forms=__webpack_require__(123),uniqueId=0;!function(KEY){KEY.LEFT="ArrowLeft",KEY.UP="ArrowUp",KEY.RIGHT="ArrowRight",KEY.DOWN="ArrowDown"}(KEY||(KEY={})),function(RangeSelectorDirection){RangeSelectorDirection.ltr="ltr",RangeSelectorDirection.rtl="rtl",RangeSelectorDirection.ttb="ttb",RangeSelectorDirection.btt="btt"}(RangeSelectorDirection||(RangeSelectorDirection={}));var next_range_selector_component_NextRangeSelectorComponent=function(){function NextRangeSelectorComponent(elementRef,renderer){this.elementRef=elementRef,this.renderer=renderer,this.id="next-range-selector-"+ ++uniqueId,this.min=0,this.max=100,this.useKeyboard=!0,this.duration=.5,this.tabIndex=1,this.dotSize=14,this.direction=RangeSelectorDirection.ltr,this.showBorders=!0,this.disabled=!1,this.lazy=!1,this.bordersColors=["#9d9d9d","#c6c6c6"],this.focusDotIndex=0,this.dotsPos=[],this.dotsValue=[],this.scale=1,this.dragging=!1,this.onChangeCallback=function(val){return null},this.onTouchedCallback=function(val){return null}}var NextRangeSelectorComponent_1,_a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p;return NextRangeSelectorComponent_1=NextRangeSelectorComponent,Object.defineProperty(NextRangeSelectorComponent.prototype,"dots",{get:function(){var _this=this;return this.dotsPos.map(function(pos,index){var _a;return{pos:pos,index:index,disabled:_this.dotDisabled&&_this.dotDisabled[index]||_this.disabled,focus:document.getElementById(_this.id+"-"+index)===document.activeElement,style:tslib_es6.a({},_this.dotBaseStyle,(_a={"pointer-events":_this.dotDisabled&&_this.dotDisabled[index]&&_this.dotDisabled[index].disabled||_this.disabled?"none":"auto"},_a[_this.mainDirection]=pos+"%",_a.transition=_this.dragging?"0s":_this.mainDirection+" "+_this.animateTime+"s",_a),_this.dotStyle)}})},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"processArray",{get:function(){var _this=this;return this.process?this.processArrayDots.map(function(_a){var _b,start=_a[0],end=_a[1],sizeStyleKey=_this.isHorizontal?"width":"height";return{style:tslib_es6.a((_b={},_b[_this.isHorizontal?"height":"width"]="100%",_b[_this.isHorizontal?"top":"left"]=0,_b[_this.mainDirection]=start+"%",_b[sizeStyleKey]=end-start+"%",_b.transitionProperty=sizeStyleKey+","+_this.mainDirection,_b.transitionDuration=_this.dragging?"0s":_this.animateTime+"s",_b),_this.processStyle)}}):[]},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"bordersArray",{get:function(){var _this=this;if(this.borders&&this.showBorders){var bordersArray_1=[];return this.borders.forEach(function(value,index){var _a,sizeStyleKey=_this.isHorizontal?"width":"height",valueMin=value.min?value.min:_this.min,valueMax=value.max?value.max:_this.max;bordersArray_1.push({style:tslib_es6.a((_a={"background-color":_this.bordersColors[index%_this.bordersColors.length]},_a[_this.isHorizontal?"height":"width"]="100%",_a[_this.isHorizontal?"top":"left"]=0,_a[_this.mainDirection]=valueMin+"%",_a[sizeStyleKey]=+valueMax-+valueMin+"%",_a),_this.borderStyle)})}),bordersArray_1}return[]},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"markList",{get:function(){var _this=this;if(!this.marks)return[];var getMarkByValue=function(value,mark){var _a,pos=_this.parseValue(value);return{value:value,style:tslib_es6.a((_a={},_a[_this.isHorizontal?"height":"width"]="100%",_a[_this.isHorizontal?"width":"height"]="4px",_a[_this.mainDirection]=pos+"%",_a),_this.markStyle),mark:mark||value}};return!0===this.marks?this.getValues().map(function(value){return getMarkByValue(value)}):"[object Object]"===Object.prototype.toString.call(this.marks)?Object.keys(this.marks).sort(function(a,b){return+a-+b}).map(function(value){var item=_this.marks[value];return getMarkByValue(value,item)}):Array.isArray(this.marks)?this.marks.map(function(value){return getMarkByValue(value)}):[]},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"containerStyles",{get:function(){var _a=Array.isArray(this.dotSize)?this.dotSize:[this.dotSize,this.dotSize],dotWidth=_a[0],dotHeight=_a[1],containerWidth=this.width?this.getSize(this.width):this.isHorizontal?"100%":this.getSize(4),containerHeight=this.height?this.getSize(this.height):this.isHorizontal?this.getSize(4):"100%";return{"pointer-events":this.disabled?"none":"auto",padding:this.isHorizontal?dotHeight/2+"px 0":"0 "+dotWidth/2+"px",width:containerWidth,height:containerHeight}},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"railStyles",{get:function(){return this.railStyle?this.railStyle:{"background-color":"#e3e3e3"}},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"markStepStyles",{get:function(){return this.markStepStyle?this.markStepStyle:{"background-color":"#c6c6c6"}},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"containerClasses",{get:function(){return["slider","slider-"+this.direction]},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"dotBaseStyle",{get:function(){var _a,_b,dotPos,_c=Array.isArray(this.dotSize)?this.dotSize:[this.dotSize,this.dotSize],dotWidth=_c[0],dotHeight=_c[1];return this.isHorizontal?((_a={transform:"translate("+(this.isReverse?"50%":"-50%")+", -50%)",WebkitTransform:"translate("+(this.isReverse?"50%":"-50%")+", -50%)",top:"50%"})[this.direction===RangeSelectorDirection.ltr?"left":"right"]="0",dotPos=_a):((_b={transform:"translate(-50%, "+(this.isReverse?"50%":"-50%")+")",WebkitTransform:"translate(-50%, "+(this.isReverse?"50%":"-50%")+")",left:"50%"})[this.direction===RangeSelectorDirection.btt?"bottom":"top"]="0",dotPos=_b),tslib_es6.a({width:dotWidth+"px",height:dotHeight+"px"},dotPos)},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"processArrayDots",{get:function(){if(this.process){if(1===this.dotsPos.length)return[[0,this.dotsPos[0]]];if(this.dotsPos.length>1)return[[Math.min.apply(Math,this.dotsPos),Math.max.apply(Math,this.dotsPos)]]}return[]},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"total",{get:function(){var total;return(total=(this.max-this.min)/this.interval)-Math.floor(total)!=0?0:total},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"isHorizontal",{get:function(){return this.direction===RangeSelectorDirection.ltr||this.direction===RangeSelectorDirection.rtl},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"isReverse",{get:function(){return this.direction===RangeSelectorDirection.rtl||this.direction===RangeSelectorDirection.btt},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"animateTime",{get:function(){return this.duration},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"mainDirection",{get:function(){switch(this.direction){case RangeSelectorDirection.ltr:return"left";case RangeSelectorDirection.rtl:return"right";case RangeSelectorDirection.btt:return"bottom";case RangeSelectorDirection.ttb:return"top"}},enumerable:!0,configurable:!0}),Object.defineProperty(NextRangeSelectorComponent.prototype,"gap",{get:function(){return 100/this.total},enumerable:!0,configurable:!0}),NextRangeSelectorComponent.prototype.ngOnInit=function(){this.renderer.removeAttribute(this.elementRef.nativeElement,"id"),this.interval||(this.interval=this.data?(this.max-this.min)/(this.data.length-1):1),void 0===this.process&&(this.process=!(this.borders&&this.showBorders)),this.el=this.container.nativeElement},NextRangeSelectorComponent.prototype.onPointerMove=function(event){this.dragging&&this.dragMove(event)},NextRangeSelectorComponent.prototype.onPointerUp=function(event){this.dragging&&(this.dragging=!1,this.dragEnd())},NextRangeSelectorComponent.prototype.writeValue=function(value){value&&(this.value=value,this.setValue(this.value))},NextRangeSelectorComponent.prototype.registerOnChange=function(fn){this.onChangeCallback=fn},NextRangeSelectorComponent.prototype.registerOnTouched=function(fn){this.onTouchedCallback=fn},NextRangeSelectorComponent.prototype.tabHandle=function(){this.focusDotIndex++,this.focusDotIndex>=this.dots.length&&(this.focusDotIndex=0)},NextRangeSelectorComponent.prototype.onPointerDown=function(dotIndex){this.dragging=!0,this.dragStart(dotIndex)},NextRangeSelectorComponent.prototype.keydownHandle=function(e){if(this.useKeyboard&&!this.disabled&&!this.isDisabledByDotIndex(this.focusDotIndex)){var handleFunc=this.getKeyboardHandleFunc(e,{direction:this.direction,max:this.total,min:0}),substr=document.activeElement.id.split("-").pop();if(this.focusDotIndex=Number(substr),handleFunc){e.preventDefault();var newIndex=handleFunc(this.getIndexByValue(this.dotsValue[this.focusDotIndex])),pos=this.parseValue(this.getValueByIndex(newIndex));if(this.borders&&this.isPosNotInValueBorders(this.focusDotIndex,pos))return;this.setDotPos(pos,this.focusDotIndex),this.syncValueByPos()}}},NextRangeSelectorComponent.prototype.clickHandle=function(e){this.setScale();var pos=this.getPosByEvent(e);this.setValueByPos(pos),document.getElementById(this.id+"-"+this.focusDotIndex).focus()},NextRangeSelectorComponent.prototype.getDotId=function(id,i){return id+"-"+i},NextRangeSelectorComponent.prototype.trackByFn=function(index,item){return index},NextRangeSelectorComponent.prototype.setValue=function(value){this.dotsValue=Array.isArray(value)?value.slice():[value],this.syncDotsPos()},NextRangeSelectorComponent.prototype.syncDotsPos=function(){var _this=this;this.dotsPos=this.dotsValue.map(function(v){return _this.parseValue(v)})},NextRangeSelectorComponent.prototype.getRecentDot=function(pos){var _this=this,arr=this.dotsPos.map(function(dotPos,bordersIndex){return _this.borders&&_this.borders[bordersIndex]&&(_this.borders[bordersIndex].max&&_this.borders[bordersIndex].max<=pos||_this.borders[bordersIndex].min&&_this.borders[bordersIndex].min>=pos)?_this.max+1:Math.abs(dotPos-pos)});return arr.indexOf(Math.min.apply(Math,arr))},NextRangeSelectorComponent.prototype.getIndexByValue=function(value){return this.data?this.data.indexOf(value):(+value-this.min)/this.interval},NextRangeSelectorComponent.prototype.getValueByIndex=function(index){return index<0?index=0:index>this.total&&(index=this.total),this.data?this.data[index]:index*this.interval+this.min},NextRangeSelectorComponent.prototype.setDotPos=function(pos,index){var changePos=pos-this.dotsPos[index];if(changePos){var changePosArr=new Array(this.dotsPos.length);changePosArr[index]=changePos,this.setDotsPos(this.dotsPos.map(function(curPos,i){return curPos+(changePosArr[i]||0)}))}},NextRangeSelectorComponent.prototype.parseValue=function(val){if(this.data)val=this.data.indexOf(val);else if("number"==typeof val||"string"==typeof val){if((val=+val)<this.min||val>this.max||"number"!=typeof val||val!=val)return 0;val=(val-this.min)/this.interval}var pos=val*this.gap;return pos<0?0:pos>100?100:pos},NextRangeSelectorComponent.prototype.getValues=function(){var _this=this;return this.data?this.data:Array.from(new Array(this.total),function(_,index){return index*_this.interval+_this.min}).concat([this.max])},NextRangeSelectorComponent.prototype.parsePos=function(pos){var index=Math.round(pos/this.gap);return this.getValueByIndex(index)},NextRangeSelectorComponent.prototype.setScale=function(){this.scale=Math.floor(this.isHorizontal?this.el.offsetWidth:this.el.offsetHeight)/100},NextRangeSelectorComponent.prototype.isDisabledByDotIndex=function(index){return Array.isArray(this.value)?this.dotDisabled&&this.dotDisabled[index]:this.dotDisabled},NextRangeSelectorComponent.prototype.setValueByPos=function(pos){var _this=this,index=this.getRecentDot(pos);this.isDisabledByDotIndex(index)||this.borders&&this.isPosNotInValueBorders(index,pos)||(this.focusDotIndex=index,this.setDotPos(pos,index),this.syncValueByPos(),setTimeout(function(){_this.syncDotsPos()}))},NextRangeSelectorComponent.prototype.dragStart=function(index){this.focusDotIndex=index,this.setScale()},NextRangeSelectorComponent.prototype.getSize=function(value){return"number"==typeof value?value+"px":value},NextRangeSelectorComponent.prototype.getPos=function(e){var event=e instanceof MouseEvent?e:e.targetTouches[0],rect=this.el.getBoundingClientRect(),posObj={x:event.pageX-(rect.left+window.scrollX),y:event.pageY-(rect.top+window.scrollY)};return{x:this.isReverse?this.el.offsetWidth-posObj.x:posObj.x,y:this.isReverse?this.el.offsetHeight-posObj.y:posObj.y}},NextRangeSelectorComponent.prototype.getKeyboardHandleFunc=function(e,params){switch(e.key){case KEY.UP:return function(i){return params.direction===RangeSelectorDirection.ttb?i-1:i+1};case KEY.RIGHT:return function(i){return params.direction===RangeSelectorDirection.rtl?i-1:i+1};case KEY.DOWN:return function(i){return params.direction===RangeSelectorDirection.ttb?i+1:i-1};case KEY.LEFT:return function(i){return params.direction===RangeSelectorDirection.rtl?i+1:i-1};default:return null}},NextRangeSelectorComponent.prototype.getPosByEvent=function(e){return this.getPos(e)[this.isHorizontal?"x":"y"]/this.scale},NextRangeSelectorComponent.prototype.isDiff=function(value1,value2){return value1.length!==value2.length||value1.some(function(val,index){return val!==value2[index]})},NextRangeSelectorComponent.prototype.syncValueByPos=function(){var values=this.dotsValue;this.isDiff(values,Array.isArray(this.value)?this.value:[this.value])&&(this.onChangeCallback(1===values.length?values[0]:values.slice()),this.value=1===values.length?values[0]:values.slice())},NextRangeSelectorComponent.prototype.isPosNotInValueBorders=function(index,pos){return this.borders[index]&&this.borders[index].max&&this.borders[index].max<pos||this.borders[index]&&this.borders[index].min&&this.borders[index].min>pos},NextRangeSelectorComponent.prototype.dragMove=function(e){e.preventDefault();var pos=this.getPosByEvent(e);this.isDisabledByDotIndex(this.focusDotIndex)||this.borders&&this.isPosNotInValueBorders(this.focusDotIndex,pos)||(pos=pos>0?pos<100?pos:100:0,this.setDotPos(pos,this.focusDotIndex),this.lazy||this.syncValueByPos())},NextRangeSelectorComponent.prototype.setDotsPos=function(dotsPos){var _this=this;this.dotsPos=dotsPos,this.dotsValue=dotsPos.map(function(dotPos){return _this.parsePos(dotPos)})},NextRangeSelectorComponent.prototype.dragEnd=function(){var _this=this;this.lazy&&this.syncValueByPos(),setTimeout(function(){_this.syncDotsPos()})},tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",String)],NextRangeSelectorComponent.prototype,"id",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Number)],NextRangeSelectorComponent.prototype,"min",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Number)],NextRangeSelectorComponent.prototype,"max",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Boolean)],NextRangeSelectorComponent.prototype,"useKeyboard",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Number)],NextRangeSelectorComponent.prototype,"interval",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Boolean)],NextRangeSelectorComponent.prototype,"process",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Number)],NextRangeSelectorComponent.prototype,"duration",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Number)],NextRangeSelectorComponent.prototype,"tabIndex",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Object)],NextRangeSelectorComponent.prototype,"width",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Object)],NextRangeSelectorComponent.prototype,"height",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Object)],NextRangeSelectorComponent.prototype,"dotSize",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",String)],NextRangeSelectorComponent.prototype,"direction",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Array)],NextRangeSelectorComponent.prototype,"borders",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Boolean)],NextRangeSelectorComponent.prototype,"showBorders",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Boolean)],NextRangeSelectorComponent.prototype,"disabled",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type","function"==typeof(_a=void 0!==typings.MarksProp&&typings.MarksProp)?_a:Object)],NextRangeSelectorComponent.prototype,"marks",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Array)],NextRangeSelectorComponent.prototype,"data",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Object)],NextRangeSelectorComponent.prototype,"lazy",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Object)],NextRangeSelectorComponent.prototype,"dotDisabled",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type","function"==typeof(_b=void 0!==core.TemplateRef&&core.TemplateRef)?_b:Object)],NextRangeSelectorComponent.prototype,"dotTpl",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type","function"==typeof(_c=void 0!==core.TemplateRef&&core.TemplateRef)?_c:Object)],NextRangeSelectorComponent.prototype,"markTpl",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type","function"==typeof(_d=void 0!==typings.Styles&&typings.Styles)?_d:Object)],NextRangeSelectorComponent.prototype,"railStyle",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type","function"==typeof(_e=void 0!==typings.Styles&&typings.Styles)?_e:Object)],NextRangeSelectorComponent.prototype,"processStyle",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type","function"==typeof(_f=void 0!==typings.Styles&&typings.Styles)?_f:Object)],NextRangeSelectorComponent.prototype,"markStyle",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type","function"==typeof(_g=void 0!==typings.Styles&&typings.Styles)?_g:Object)],NextRangeSelectorComponent.prototype,"markStepStyle",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type","function"==typeof(_h=void 0!==typings.Styles&&typings.Styles)?_h:Object)],NextRangeSelectorComponent.prototype,"dotStyle",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type","function"==typeof(_j=void 0!==typings.Styles&&typings.Styles)?_j:Object)],NextRangeSelectorComponent.prototype,"borderStyle",void 0),tslib_es6.b([Object(core.Input)(),tslib_es6.d("design:type",Array)],NextRangeSelectorComponent.prototype,"bordersColors",void 0),tslib_es6.b([Object(core.ViewChild)("container"),tslib_es6.d("design:type","function"==typeof(_k=void 0!==core.ElementRef&&core.ElementRef)?_k:Object)],NextRangeSelectorComponent.prototype,"container",void 0),tslib_es6.b([Object(core.HostListener)("document:pointermove",["$event"]),tslib_es6.d("design:type",Function),tslib_es6.d("design:paramtypes",["function"==typeof(_l="undefined"!=typeof PointerEvent&&PointerEvent)?_l:Object]),tslib_es6.d("design:returntype",void 0)],NextRangeSelectorComponent.prototype,"onPointerMove",null),tslib_es6.b([Object(core.HostListener)("document:pointerup",["$event"]),tslib_es6.d("design:type",Function),tslib_es6.d("design:paramtypes",["function"==typeof(_m="undefined"!=typeof PointerEvent&&PointerEvent)?_m:Object]),tslib_es6.d("design:returntype",void 0)],NextRangeSelectorComponent.prototype,"onPointerUp",null),NextRangeSelectorComponent=NextRangeSelectorComponent_1=tslib_es6.b([Object(core.Component)({selector:"next-range-selector",template:__webpack_require__(363),styles:[__webpack_require__(364)],providers:[{provide:fesm5_forms.NG_VALUE_ACCESSOR,useExisting:Object(core.forwardRef)(function(){return NextRangeSelectorComponent_1}),multi:!0}]}),tslib_es6.d("design:paramtypes",["function"==typeof(_o=void 0!==core.ElementRef&&core.ElementRef)?_o:Object,"function"==typeof(_p=void 0!==core.Renderer2&&core.Renderer2)?_p:Object])],NextRangeSelectorComponent)}(),common=__webpack_require__(19);!function(){function NextRangeSelectorModule(){}NextRangeSelectorModule=tslib_es6.b([Object(core.NgModule)({declarations:[next_range_selector_component_NextRangeSelectorComponent],imports:[common.a],exports:[next_range_selector_component_NextRangeSelectorComponent]})],NextRangeSelectorModule)}();__webpack_require__.d(__webpack_exports__,"b",function(){return RangeSelectorDirection}),__webpack_require__.d(__webpack_exports__,"a",function(){return next_range_selector_component_NextRangeSelectorComponent})}},[[188,1,2]]]);
//# sourceMappingURL=main.521ed36930942ca82076.bundle.js.map